name: Valgrind Memory Leak Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  valgrind-linux:
    name: Valgrind on Ubuntu x86_64
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Homebrew (if not already present)
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install system dependencies
        run: |
          sudo apt-get install -y \
            valgrind \
            cmake \
            build-essential \
            pkg-config \
            python3-venv

      - name: Install Gstreamer Dev versions
        run: |
          brew install gstreamer

      - name: Setup Python Virtual Environment
        run: |
          python3 -m venv venv
          echo "VIRTUAL_ENV=./venv" >> $GITHUB_ENV
          echo "./venv/bin" >> $GITHUB_PATH

      # - name: Check GStreamer version
      #   run: |
      #     GST_VERSION=$(pkg-config --modversion gstreamer-1.0)
      #     echo "GStreamer version: $GST_VERSION"
      #     # Verify GStreamer >= 1.26 (required for GstVecDeque)
      #     if ! pkg-config --atleast-version=1.26 gstreamer-1.0; then
      #       echo "Error: GStreamer 1.26+ required (found $GST_VERSION)"
      #       exit 1
      #     fi
      
      - name: Install Conan
        run: |
          pip install conan
          conan --version
      
      - name: Configure Conan profile
        run: |
          conan profile detect --force
      
      - name: Install Conan dependencies
        run: |
          conan install . --build=missing --settings=build_type=Debug
      
      - name: Configure CMake
        run: |
          cmake --preset=conan-debug
      
      - name: Build project
        run: |
          cmake --build build/Debug --parallel $(nproc)
      
      - name: Run Valgrind leak tests
        run: |
          chmod +x tests/memory/test_leaks_valgrind.sh
          bash tests/memory/test_leaks_valgrind.sh
      
      - name: Upload Valgrind logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: valgrind-logs
          path: build/valgrind_logs/
          retention-days: 7
      
      - name: Summary
        if: always()
        run: |
          echo "## Valgrind Memory Leak Check Results" >> $GITHUB_STEP_SUMMARY
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ No memory leaks detected" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Memory leaks or test failures detected" >> $GITHUB_STEP_SUMMARY
            echo "See artifacts for detailed Valgrind logs" >> $GITHUB_STEP_SUMMARY
          fi
